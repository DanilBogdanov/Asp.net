@page 
@model DanilDev.Pages.Prices.IndexModel
@{
    ViewData["Title"] = "Prices";
}

<div class="container-fluid">
    <p class="display-4">Prices</p>
    @*<form id="searchForm" method="get" hidden>
        <input id="qInput" name="q" />
    </form>*@

    
    @*Prices*@
    <div class="row">
        <div style = "overflow-y:auto; width:100%" class="col-lg-4">
            
            <table id="price_table" class="table table-sm table-hover shadow">
                <thead class="thead-dark">
                    <tr>
                        <th scope="col">#</th>
                        <th scope="col">Name</th>                        
                        <th scope="col"><a class="btn btn-sm btn-primary float-right small" href="Prices/AddPrice" role="button">Add Price</a></th>                        
                        
                    </tr>
                </thead>
                <tbody>
                    @for (var i = 0; i < @Model.Prices.Count; i++)
                    {
                        var price = Model.Prices[i];
                        <tr>
                            <td onclick="openPrice(@price.Id)" style="cursor: pointer;">
                                @(i + 1)
                            </td>
                            <td data-priceId="@price.Id" onclick="openPrice(@price.Id)" style = "cursor: pointer;">
                                @price.Name
                            </td>                            
                            <td class="d-flex justify-content-end ">
                                @*<button type="button" class="btn btn-outline-danger btn-sm py-1" onclick="openPrice(@price.Id)">Open</button>*@
                                @*<a class="btn btn-outline-success btn-sm float-center px-1" href="EmployeeDirectory/Employees/Edit/@employee.Id" role="button">✎</a>*@
                                <button type="button" class="btn btn-outline-danger btn-sm ml-3 py-1" onclick="delPrice(@price.Id)">х</button>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            <form id="priceToDelForm" name="priceToDelForm" action="/Prices/DelPrice" method="post">
                <input id="priceToDelInput" type="hidden" name="priceToDelId" />
                <input id="referrer" type="hidden" name="referrer" />
            </form>
            <script>
                //reload page if price added
                setInterval(function(){
                    let currentPriceCount = $("#price_table > tbody > tr").length;
                    $.get("api/Prices/getPricesCount", function (data) {
                        if (currentPriceCount != data) {
                            location.reload();
                        }
                    });                    
                }, 2000);

                function delPrice(priceId) {
                    if (priceId !== undefined &&
                        priceId != 0) {

                        referrer.value = window.location.href;
                        priceToDelInput.value = priceId;

                        priceToDelForm.submit();
                     }
                }

                function openPrice(priceId) {
                    loadPrice(priceId);
                    //let url = "/Prices/" + priceId;
                    //$(location).attr('href', url);
                }                
            </script>
        </div>
        <div class="col-lg-8">
            <table id="current_price" class="table table-sm table-hover shadow">
                <thead class="thead-dark">
                    <tr>
                        @*Added from script*@
                    </tr>
                </thead>
                <tbody>
                    @*Added from script*@
                </tbody>
            </table>
            <script>
                function loadPrice(id) {
                    $.get(`api/Prices/getPrice/${id}`, function (data) {
                        document.cookie = `price=${id}`;
                        //ADD HEADERS
                        const columns = data.columns;                        
                        let tr = $("#current_price > thead > tr");
                        tr.html("");
                        tr.append(`<th scope="col">#</th>`);
                        tr.append(`<th scope="col">Name</th>`); 
                        tr.append(`<th scope="col">Code</th>`);                         
                        for (let i=0; i < columns.length; i++) {
                            tr.append(`<th scope="col">${columns[i].name}</th>`);
                        }
                        tr.append(`<th scope="col"><a class="btn btn-primary float-right" href="/Prices/AddLine/${id}" role="button">Add Item</a></th>`);
                        //END HEADERS


                        //ADD BODY
                        const lines = data.lines;
                        let tbody = $("#current_price > tbody");
                        tbody.html("");
                        //lines
                        for (let i=0; i < lines.length; i++) {
                            let line = lines[i];
                            
                            let tr = $('<tr></tr>');
                            tr.append(`<td>${i+1}</td>`);
                            tr.append(`<td>${line.name}</td>`);
                            tr.append(`<td>${line.code}</td>`);

                            //columns
                            for (let y=0; y < columns.length; y++) {
                                let lineCol = "";
                                let column = columns[y];
                                //items
                                for (let it=0; it < line.items.length; it++) {
                                    let item = line.items[it];
                                    if (item.columnId == column.id) {
                                        //if column numeric get item.numericValue else item.strValue
                                        if (column.type == 0){
                                            lineCol = item.numericValue;                                            
                                        } else {
                                            lineCol = item.strValue;
                                        }
                                        break;
                                    }
                                }
                                if (lineCol == null) {
                                    lineCol = '-';
                                }
                                tr.append(`<td>${lineCol}</td>`);
                            }
                            tbody.append(tr);
                        }
                        //END BODY
                    }),
                    'json'
                };
                //end function loadPrice

                //Cookie
                function getCookie(name) {
                  let matches = document.cookie.match(new RegExp(
                    "(?:^|; )" + name.replace(/([\.$?*|{}\(\)\[\]\\\/\+^])/g, '\\$1') + "=([^;]*)"
                  ));
                  return matches ? decodeURIComponent(matches[1]) : undefined;
                };

                $(function loadFromCookie() {
                    let currentPrice = getCookie('price');
                    if (currentPrice != undefined) {
                        loadPrice(currentPrice);
                    }
                });

                //update current price
                setInterval(function(){
                    loadFromCookie();                  
                }, 2000);

            </script>
        </div>
    </div>
</div>